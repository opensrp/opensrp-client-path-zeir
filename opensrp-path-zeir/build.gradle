buildscript {
    repositories {
        google()
        jcenter()
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.2.2"
        classpath 'gradle.plugin.org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.12.0'
        classpath 'com.google.gms:google-services:4.3.10'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.9.0'
        classpath 'com.google.firebase:perf-plugin:1.4.1'  // Performance Monitoring plugin
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'org.smartregister.gradle.jarjar'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'com.google.firebase.firebase-perf' // Apply the Performance Monitoring plugin
apply from: '../properties.gradle'

jacoco {
    toolVersion = jacocoVersion
}

Properties properties = new Properties()
if (project.rootProject.file("local.properties").exists()) {
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
}

ext.getLocalProperty = { key ->
    if (properties != null && properties.containsKey(key)) {
        println(key + ": " + properties[key])
        return properties[key]
    } else {
        return "\"sample_property_value\""
    }
}

android {
    useLibrary 'org.apache.http.legacy'
    compileSdkVersion androidCompileSdkVersion
    buildToolsVersion androidBuildToolsVersion

    defaultConfig {
        applicationId "org.smartregister.path"
        minSdkVersion androidMinSdkVersion
        targetSdkVersion androidTargetSdkVersion
        multiDexEnabled true
        buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
        buildConfigField "boolean", "TIME_CHECK", "false"
        buildConfigField "String", "SYNC_TYPE", '"location"'
        buildConfigField "int", "MAX_SYNC_RETRIES", '3'
        buildConfigField "long", "BUILD_TIMESTAMP", System.currentTimeMillis() + "L"
        buildConfigField "boolean", "IS_SYNC_SETTINGS", "false"
        buildConfigField "long", "EVENT_VERSION", System.currentTimeMillis() + "L"
        buildConfigField "boolean", "USE_HIA2_DIRECTLY", "true"

        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
        javaCompileOptions.annotationProcessorOptions.includeCompileClasspath true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [eventBusIndex: 'org.smartregister.path.AppEventBusIndex']
            }
        }
        vectorDrawables.useSupportLibrary = true
    }

    applicationVariants.all { variant ->
        if (variant.name == "debug") {
            variant.outputs.each { output ->
                output.versionCodeOverride = 35
                output.versionNameOverride = "0.0.35-debug"
            }
        } else if (variant.name == "preview") {
            variant.outputs.each { output ->
                output.versionCodeOverride = 21
                output.versionNameOverride = "0.0.21-preview"
            }
        } else if (variant.name == "release") {
            variant.outputs.each { output ->
                output.versionCodeOverride = 22
                output.versionNameOverride = "2.1.1-release"
            }
        }
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }

    lintOptions {
        lintConfig file("lint.xml")
        abortOnError false
    }

    androidExtensions {
        experimental = true
    }

    compileOptions {
        // Flag to enable support for the new language APIs
        coreLibraryDesugaringEnabled true
        // Sets Java compatibility to Java 8
        sourceCompatibility 1.8
        targetCompatibility 1.8
    }

    signingConfigs {
        release {

            v1SigningEnabled true
            v2SigningEnabled true

            //Store your keystore.properties file in the project root folder
            keyAlias System.getenv("KEYSTORE_ALIAS")?: project.KEYSTORE_ALIAS
            keyPassword System.getenv("KEY_PASSWORD") ?: project.KEY_PASSWORD
            storePassword System.getenv("KEYSTORE_PASSWORD") ?: project.KEYSTORE_PASSWORD

            //Save your keystore file as ~/zeir.keystore.jks (in your home directory)
            storeFile file(System.getProperty("user.home") + "/zeir.keystore.jks")
        }
    }

    buildTypes {

        release {
            minifyEnabled false
            zipAlignEnabled true
            debuggable false
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rule.pro'
            resValue "string", 'opensrp_url', '"https://zeir.smartregister.org/opensrp/"'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '1'
            buildConfigField "int", "VACCINE_SYNC_TIME", '0'
            buildConfigField "int", "DATABASE_VERSION", '20'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '180'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '180'
            buildConfigField "int", "VIEW_SYNC_CONFIGURATIONS_MINUTES", '15'
            buildConfigField "int", "CLIENT_SETTINGS_SYNC_MINUTES", '15'
            buildConfigField "int", "GROWTH_MONITORING_SYNC_TIME", '15'
            buildConfigField "String[]", "LOCATION_LEVELS", '{"Country", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "HEALTH_FACILITY_LEVELS", '{"Country", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "ALLOWED_LEVELS", '{"Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String", 'DEFAULT_LOCATION', '"Health Facility"'
            buildConfigField "String", "OAUTH_CLIENT_ID", getLocalProperty("oauth.client.id.release")
            buildConfigField "String", "OAUTH_CLIENT_SECRET", getLocalProperty("oauth.client.secret.release")
        }

        debug {
            signingConfig signingConfigs.debug
            testCoverageEnabled true
            resValue "string", 'opensrp_url', '"https://path-zeir-stage.smartregister.org/opensrp/"'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '250'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '100'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '2'
            buildConfigField "int", "VACCINE_SYNC_TIME", '0'
            buildConfigField "int", "DATABASE_VERSION", '20'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '15'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '15'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '15'
            buildConfigField "int", "VIEW_SYNC_CONFIGURATIONS_MINUTES", '15'
            buildConfigField "int", "CLIENT_SETTINGS_SYNC_MINUTES", '15'
            buildConfigField "int", "GROWTH_MONITORING_SYNC_TIME", '15'
            buildConfigField "String[]", "LOCATION_LEVELS", '{"National", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "HEALTH_FACILITY_LEVELS", '{"National", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "ALLOWED_LEVELS", '{"Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String", 'DEFAULT_LOCATION', '"Health Facility"'
            buildConfigField "String", "OAUTH_CLIENT_ID", getLocalProperty("oauth.client.id.debug")
            buildConfigField "String", "OAUTH_CLIENT_SECRET", getLocalProperty("oauth.client.secret.debug")
        }

        preview {
            minifyEnabled false
            zipAlignEnabled true
            debuggable false
            signingConfig signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rule.pro'
            resValue "string", 'opensrp_url', '"https://path-zeir-preview.smartregister.org/opensrp/"'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_INITIAL_BATCH_SIZE", '50'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_BATCH_SIZE", '10'
            buildConfigField "int", "OPENMRS_UNIQUE_ID_SOURCE", '3'
            buildConfigField "int", "VACCINE_SYNC_TIME", '0'
            buildConfigField "int", "DATABASE_VERSION", '20'
            buildConfigField "long", "MAX_SERVER_TIME_DIFFERENCE", "1800000l"
            buildConfigField "boolean", "TIME_CHECK", "true"
            buildConfigField "int", "DATA_SYNC_DURATION_MINUTES", '15'
            buildConfigField "int", "VACCINE_SYNC_PROCESSING_MINUTES", '30'
            buildConfigField "int", "IMAGE_UPLOAD_MINUTES", '180'
            buildConfigField "int", "PULL_UNIQUE_IDS_MINUTES", '180'
            buildConfigField "int", "VIEW_SYNC_CONFIGURATIONS_MINUTES", '15'
            buildConfigField "int", "CLIENT_SETTINGS_SYNC_MINUTES", '15'
            buildConfigField "int", "GROWTH_MONITORING_SYNC_TIME", '15'
            buildConfigField "String[]", "LOCATION_LEVELS", '{"National", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "HEALTH_FACILITY_LEVELS", '{"National", "Province", "District", "Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String[]", "ALLOWED_LEVELS", '{"Health Facility", "Health Centre Urban", "Health Centre Rural", "Zone"}'
            buildConfigField "String", 'DEFAULT_LOCATION', '"Health Facility"'
            buildConfigField "String", "OAUTH_CLIENT_ID", getLocalProperty("oauth.client.id.preview")
            buildConfigField "String", "OAUTH_CLIENT_SECRET", getLocalProperty("oauth.client.secret.preview")
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE.md'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/INDEX.LIST'
    }

    testOptions {
        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
                excludes = ['jdk.internal.*']
            }
            jvmArgs '-noverify'
        }
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    android.buildFeatures.dataBinding
}

tasks.withType(Test) {
    jacoco.includeNoLocationClasses = true
}

dependencies {
    implementation fileTree(dir: "./build/libs", include: ['*.jar'])
    jarJar 'com.ibm.fhir:fhir-model:4.7.1'
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.5'

    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlinVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlinVersion"

    def kotlinxCoroutinesVersion='1.6.1'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinxCoroutinesVersion"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinxCoroutinesVersion"

    implementation "androidx.work:work-runtime-ktx:2.7.1"
    implementation "androidx.core:core-ktx:1.8.0"
    implementation "androidx.sqlite:sqlite-ktx:2.2.0"

    def lifecycleKTXVersion = '2.4.1'
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycleKTXVersion"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleKTXVersion"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycleKTXVersion"

    def navigationKTXVersion = '2.4.2';
    implementation "androidx.navigation:navigation-fragment-ktx:$navigationKTXVersion"
    implementation "androidx.navigation:navigation-ui-ktx:$navigationKTXVersion"
    implementation "androidx.cardview:cardview:1.0.0"

    implementation('org.smartregister:opensrp-client-child:1.0.0-ALPHA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'id.zelory', module: 'compressor'
        exclude group: 'org.smartregister', module: 'opensrp-client-growth-monitoring'
        exclude group: 'org.smartregister', module: 'opensrp-client-immunization'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-reporting'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.google.guava', module: 'guava'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
    }

    implementation('org.smartregister:opensrp-client-immunization:5.0.0-BETA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'appcompat-v7'
    }

    implementation('org.smartregister:opensrp-client-core:6.0.0-BETA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'id.zelory', module: 'compressor'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'support-media-compat'
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'com.android.support', module: 'support-v4'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'org.smartregister', module: 'opensrp-client-reporting'
    }

    implementation('org.smartregister:opensrp-client-growth-monitoring:3.0.0-ALPHA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'id.zelory', module: 'compressor'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-reporting'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'com.github.lecho', module: 'hellocharts-library'
    }

    implementation('org.smartregister:opensrp-client-reporting:0.1.5-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'id.zelory', module: 'compressor'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.github.lecho', module: 'hellocharts-library'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }

    implementation('org.smartregister:opensrp-client-stock:1.2.4-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'id.zelory', module: 'compressor'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'org.smartregister', module: 'opensrp-client-native-form'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-reporting'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
    }

    implementation('org.smartregister:opensrp-client-native-form:3.0.0-BETA-SNAPSHOT@aar') {
        transitive = true
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'appcompat-v7'
        exclude group: 'org.smartregister', module: 'opensrp-client-core'
        exclude group: 'com.android.support', module: 'design'
        exclude group: 'com.android.support', module: 'cardview-v7'
        exclude group: 'io.ona.rdt-capture', module: 'lib'
        exclude group: 'com.google.android.gms', module: 'play-services-vision'
        exclude group: 'com.google.code.gson', module: 'gson'
        exclude group: 'com.simprints', module: 'libsimprints'
        exclude group: 'com.ibm.fhir', module: 'fhir-model'
        exclude group: 'com.github.raihan-mpower', module:'FancyAlertDialog-Android'
    }
    implementation('com.google.android.material:material:1.6.1') {
        exclude group: 'com.android.support', module: 'recyclerview-v7'
        exclude group: 'com.android.support', module: 'cardview-v7'
    }
    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'

    implementation 'androidx.appcompat:appcompat:1.4.2'
    annotationProcessor 'com.jakewharton:butterknife:10.2.3'
    implementation 'net.zetetic:android-database-sqlcipher:4.5.1@aar'
    implementation 'commons-validator:commons-validator:1.7'

    implementation 'com.google.code.gson:gson:2.9.0'

    def greenRobotEventBusVersion = '3.2.0'
    implementation "org.greenrobot:eventbus:$greenRobotEventBusVersion"
    annotationProcessor "org.greenrobot:eventbus-annotation-processor:$greenRobotEventBusVersion"
    implementation 'com.google.guava:guava:31.1-android'
    // Because RxAndroid releases are few and far between, it is recommended you also
    // explicitly depend on RxJava's latest version for bug fixes and new features.
    implementation 'io.reactivex.rxjava3:rxjava:3.1.5'
    implementation 'io.reactivex.rxjava3:rxandroid:3.0.0'
    implementation 'com.evernote:android-job:1.4.3'
    implementation 'com.github.lecho:hellocharts-library:1.5.8@aar'
    implementation 'id.zelory:compressor:2.1.1'
    implementation 'androidx.recyclerview:recyclerview:1.2.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'de.hdodenhof:circleimageview:3.1.0'
    implementation 'org.jeasy:easy-rules-mvel:3.4.0'
    implementation group: "org.yaml", name: 'snakeyaml', version: '1.30'
    implementation 'com.github.florent37:expansionpanel:1.2.4'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.13.3'

    //Firebase
    implementation platform('com.google.firebase:firebase-bom:30.0.2')
    implementation 'com.google.firebase:firebase-crashlytics'
    implementation 'com.google.firebase:firebase-perf'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.2'

    androidTestImplementation "androidx.test.espresso:espresso-core:3.4.0"
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'

    def robolectricVersion = '4.8.1'
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.robolectric:shadows-multidex:$robolectricVersion"
    testImplementation "org.robolectric:shadows-supportv4:$robolectricVersion"
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
    testImplementation group: 'org.skyscreamer', name: 'jsonassert', version: '1.5.0'
    testImplementation 'com.ibm.fhir:fhir-model:4.7.1'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'androidx.test:core:1.4.0'
    testImplementation 'androidx.work:work-testing:2.7.1'
    testImplementation 'org.mockito:mockito-core:3.12.4'
    testImplementation "io.mockk:mockk:1.12.0"
}

task jacocoTestReport(type: JacocoReport, dependsOn: ['testDebugUnitTest', 'createDebugCoverageReport']) {

    reports {
        xml.enabled = true
        html.enabled = true
    }

    getReports().getXml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"))
    getReports().getHtml().setDestination(file("${buildDir}/reports/jacoco/jacocoRootReport/html"))

    def excludes = [
            '**/R.class',
            '**/R$*.class',
            '**/BuildConfig.*',
            '**/*$ViewInjector*.*',
            '**/Manifest*.*',
            '**/*Test*.*',
            'android/**/*.*',
            '**/ZeirApplication*.*',
            '**/AppSyncConfiguration*.*',
            '**Constant*.*',
            '**/*$ViewBinder*.*']

    def javaDebugTree = fileTree(dir: "$project.buildDir/intermediates/javac/debug/classes/", excludes: excludes)
    def kotlinDebugTree = fileTree(dir: "${project.buildDir}/tmp/kotlin-classes/debug", excludes: excludes)
    def mainSrc = "$project.projectDir/src/main/java"
    def kotlinSrc = "$project.projectDir/src/main/kotlin"

    sourceDirectories.setFrom(files([mainSrc, kotlinSrc]))
    classDirectories.setFrom(files([javaDebugTree, kotlinDebugTree]))

    executionData.setFrom(
            fileTree(dir: project.buildDir, includes: [
                    'jacoco/testDebugUnitTest.exec', 'outputs/code-coverage/connected/*coverage.ec'
            ])
    )
}

task javadoc(type: Javadoc) {
    failOnError false
    def mainSrc = "$project.projectDir/src/main/java"
    def kotlinSrc = "$project.projectDir/src/main/kotlin"
    source = files([mainSrc, kotlinSrc])
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

coveralls {
    jacocoReportPath = "${buildDir}/reports/jacoco/jacocoRootReport/merged.xml"
}
